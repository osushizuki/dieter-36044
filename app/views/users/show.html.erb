
<%= render "shared/header" %>

<div class="item-show">
  <div class="item-box">

    <div class="item-img-content">
      <%#= image_tag @item.image ,class:"item-box-img" %>
    </div>

    <div class="item-explain-box">
      <span><%#= @item.explanation %></span>
    </div>

    <table class="detail-table">
      <tbody>
        <tr>
          <th class="detail-item">ニックネーム</th>
          <td class="detail-value">
            <%= current_user.nick_name %>
          </td>
        </tr>

        <tr>
          <th class="detail-item">登録時体重</th>
          <td class="detail-value">
            <%= current_user.weight %>
          </td>
        </tr>

        <tr>
          <th class="detail-item">身長</th>
          <td class="detail-value">
            <%= current_user.height %>
          </td>
        </tr>

        <tr>
          <th class="detail-item">年齢</th>
          <td class="detail-value">
            <%= current_user.age %>
          </td>
        </tr>

        <tr>
          <th class="detail-item">運動習慣</th>
          <td class="detail-value">
            <%= current_user.habit.name %>
          </td>
        </tr>

      </tbody>
    </table>
    <%= link_to "プロフィール変更", edit_user_path, method: :get, class: "item-red-btn" %>
  </div>

<canvas id="myChart"></canvas>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.1.4/Chart.min.js"></script>

<script>
  var ChartData;
  var ctx = document.getElementById('myChart').getContext('2d');
        
  ChartData = new Chart(ctx, {
 
    type: 'bar',
    data:{

      //X軸の情報

      labels: ['8月1日', '8月2日', '8月3日', '8月4日', '8月5日', '8月6日', '8月7日'],

      //Y軸の情報
      datasets: [{
        //グラフの種類
        type: 'bar',
        //凡例名
        label: "おやつの値段",
        //情報
        data: [50, 220, 170, 240, 40, 200, 140, 150],
        //背景色
        backgroundColor: "rgba(54,162,235,0.2)",
        //線色
        borderColor: 'rgb(54,162,235)',
        //先の太さ
        borderWidth: 1,
      },
      {
        type: 'line',  //折れ線グラフ
        label: "A男のやる気",
        data: [50, 20, 20, 30, 30, 40, 10],
        backgroundColor: "rgba(255, 99, 132,0.2)",
        borderColor: "rgb(255, 99, 132)",
        borderWidth: 1.2,
        //ポイントの背景色
        pointBackgroundColor: "rgba(255, 99, 132, 0.2)",
        //ポイントの形(circle[○],rect[□],triangle[△]等がある)
        pointStyle: 'circle',
        //ポイントの半径
        radius: 4,
        //ホバー時のポイント背景色
        pointHoverBackgroundColor: "rgba(255, 99, 132, 0.2)",
        //ホバー時のポイントの半径
        pointHoverRadius: 6,
        //ホバー時のポイント背景色
        pointHoverBorderColor: "rgb(255, 99, 132)",
        //ホバー時の先の太さ
        pointHoverBorderWidth: 2,
        //ベジェ曲線の張力（0＝直線） 
        lineTension: 0,
        //線下を塗りつぶすかどうか
        fill: false,
        //軸のID（複数軸存在する場合）
        yAxisID: "y2"
      },

      {
        type: 'line',
        label: "B子のやる気",
        data: [30, 90, 60, 80, 20, 70, 50],
        backgroundColor: "rgba(100, 170, 100,0.2)",
        borderColor: "rgb(100, 170, 100)",
        pointBackgroundColor: "rgba(100, 170, 100, 0.2)",
        pointHoverBackgroundColor: "rgba(100, 170, 100, 0.2)",
        pointStyle: 'triangle',
        radius: 4,
        pointHoverRadius: 7,
        borderWidth: 1.2,
        pointHoverBorderColor: "rgb(100, 170, 100)",
        pointHoverBorderWidth: 2,
        lineTension: 0,
        fill: false,
        yAxisID: "y2"
      }]
    },
    options: {
      legend: {
      //凡例
      display: true
    },
    tooltips: {
      //ツールチップ
      enabled: true
    },
    scales: {
      //Y軸のオプション
      yAxes: [{
        scaleLabel: {fontColor: "black"},
        gridLines: {color: "rgba(126, 126, 126, 0.4)",zeroLineColor: "black"},
        ticks: {fontColor: "black",beginAtZero: true,suggestedMax: 3000,stepSize: 500}
        },
        {
          id: "y2",
          position: "right",
          autoSkip: true,
          gridLines: {display: false},
          ticks: {ontColor: "black",beginAtZero: true,max: 120,stepSize: 20,callback: function(val) {return val + 'kg';}
        }
      }],
      //X軸のオプション
      xAxes: [{
        scaleLabel: {
          fontColor: "black",
          display: true,
          labelString: '日付'
        },
        gridLines: {
          color: "rgba(126, 126, 126, 0.4)",
          zeroLineColor: "black"
        },
        ticks: {
          fontColor: "black"
        }
      }]
    }
  }
});
</script>
</div>